C51 COMPILER V9.54   MAIN                                                                  08/29/2024 10:29:51 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: D:\Keil_5\Packs\C51\C51\BIN\C51.EXE ..\code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\code;..\user)
                    - DEBUG OBJECTEXTEND PRINT(.\main.lst) TABS(2) OBJECT(..\obj\main.obj)

line level    source

   1          /*******************************************************
   2          **  CPU: STC11L08XE
   3          **  晶振：22.1184MHZ
   4          **  波特率：9600 bit/S
   5          **  延时口令模式： 即识别时都说“小杰”这个口令唤醒后，如果15秒内不进行语音识别则退出唤醒
   6          /*********************************************************/
   7          
   8          #include<stdio.h>
   9          #include<stdlib.h>
  10          #include "config.h"
  11          /************************************************************************************/
  12          //  nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  13          //  LD_ASR_NONE:    表示没有在作ASR识别
  14          //  LD_ASR_RUNING：   表示LD3320正在作ASR识别中
  15          //  LD_ASR_FOUNDOK:   表示一次识别流程结束后，有一个识别结果
  16          //  LD_ASR_FOUNDZERO: 表示一次识别流程结束后，没有识别结果
  17          //  LD_ASR_ERROR:   表示一次识别流程中LD3320芯片内部出现不正确的状态
  18          /***********************************************************************************/
  19          uint8 idata nAsrStatus = 0;
  20          void MCU_init();
  21          void ProcessInt0(); //识别处理函数
  22          void delay(unsigned long uldata);
  23          void User_handle(uint8 dat);//用户执行操作函数
  24          void Delay200ms();
  25          void Led_test(void);//单片机工作指示
  26          uint8_t G0_flag = DISABLE; //运行标志，ENABLE:运行。DISABLE:禁止运行
  27          sbit LED = P4 ^ 2; //信号指示灯
  28          int over_time; 
  29          
  30          sbit SRD1 = P1 ^ 7;
  31          sbit SRD2 = P1 ^ 6;
  32          sbit SRD3 = P1 ^ 5;
  33          sbit SRD4 = P1 ^ 4;
  34          
  35          
  36          /***********************************************************
  37          * 名    称： void  main(void)
  38          * 功    能： 主函数 程序入口
  39          * 入口参数：
  40          * 出口参数：
  41          * 说    明：
  42          * 调用方法：
  43          **********************************************************/
  44          void  main(void)
  45          {
  46   1        uint8 idata nAsrRes;
  47   1        uint8 i = 0;
  48   1        P1M0 = 0xFF;
  49   1        P1M1 = 0x00;
  50   1        SRD1 = SRD2 = SRD3 = SRD4 = 0;
  51   1        Led_test();
  52   1        MCU_init();
  53   1        LD_Reset();
  54   1        UartIni(); /*串口初始化*/
C51 COMPILER V9.54   MAIN                                                                  08/29/2024 10:29:51 PAGE 2   

  55   1        nAsrStatus = LD_ASR_NONE;   //  初始状态：没有在作ASR
  56   1        PrintCom("<G>主人，你好");
  57   1        while(1)
  58   1        {
  59   2          if(over_time>=500*4)//500对应15s，乘几就是几倍
  60   2          {
  61   3            over_time=0;
  62   3            G0_flag = DISABLE;
  63   3            LED = 1;
  64   3            PrintCom("<G>主人，我先退下了");
  65   3          }
  66   2          switch(nAsrStatus)
  67   2          {
  68   3          case LD_ASR_RUNING:
  69   3          case LD_ASR_ERROR:
  70   3            break;
  71   3          case LD_ASR_NONE:
  72   3          {
  73   4            nAsrStatus = LD_ASR_RUNING;
  74   4            if (RunASR() == 0)  /*  启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  75   4            {
  76   5              nAsrStatus = LD_ASR_ERROR;
  77   5            }
  78   4            break;
  79   4          }
  80   3          case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  81   3          {
  82   4            nAsrRes = LD_GetResult();   /*获取结果*/
  83   4            User_handle(nAsrRes);//用户执行函数
  84   4            nAsrStatus = LD_ASR_NONE;
  85   4            break;
  86   4          }
  87   3          case LD_ASR_FOUNDZERO:
  88   3          default:
  89   3          {
  90   4            nAsrStatus = LD_ASR_NONE;
  91   4            break;
  92   4          }
  93   3          }// switch
  94   2        }// while
  95   1      
  96   1      }
  97          /***********************************************************
  98          * 名    称：   LED灯测试
  99          * 功    能： 单片机是否工作指示
 100          * 入口参数： 无
 101          * 出口参数：无
 102          * 说    明：
 103          **********************************************************/
 104          void Led_test(void)
 105          {
 106   1        LED = ~ LED;
 107   1        Delay200ms();
 108   1        LED = ~ LED;
 109   1        Delay200ms();
 110   1        LED = ~ LED;
 111   1        Delay200ms();
 112   1        LED = ~ LED;
 113   1        Delay200ms();
 114   1        LED = ~ LED;
 115   1        Delay200ms();
 116   1        LED = ~ LED;
C51 COMPILER V9.54   MAIN                                                                  08/29/2024 10:29:51 PAGE 3   

 117   1      }
 118          /***********************************************************
 119          * 名    称： void MCU_init()
 120          * 功    能： 单片机初始化
 121          * 入口参数：
 122          * 出口参数：
 123          * 说    明：
 124          * 调用方法：
 125          **********************************************************/
 126          void MCU_init()
 127          {
 128   1        P0 = 0xff;
 129   1        P1 = 0x00;
 130   1        P2 = 0xff;
 131   1        P3 = 0xff;
 132   1        P4 = 0xff;
 133   1      
 134   1        AUXR &= 0x7F;   //定时器时钟12T模式
 135   1        TMOD |= 0x01;   //设置定时器模式
 136   1        TL0 = 0x00;   //设置定时初值
 137   1        TH0 = 0x28;   //设置定时初值
 138   1        TF0 = 0;    //清除TF0标志
 139   1        TR0 = 1;    //定时器0开始计时
 140   1        ET0=1;
 141   1      
 142   1        LD_MODE = 0;    //  设置MD管脚为低，并行模式读写
 143   1        IE0 = 1;
 144   1        EX0 = 1;
 145   1        EA = 1;
 146   1        WDT_CONTR=0x3D;
 147   1      }
 148          /***********************************************************
 149          * 名    称：  延时函数
 150          * 功    能：
 151          * 入口参数：
 152          * 出口参数：
 153          * 说    明：
 154          * 调用方法：
 155          **********************************************************/
 156          void Delay200us()   //@22.1184MHz
 157          {
 158   1        unsigned char i, j;
 159   1        _nop_();
 160   1        _nop_();
 161   1        i = 5;
 162   1        j = 73;
 163   1        do
 164   1        {
 165   2          while (--j);
 166   2        }
 167   1        while (--i);
 168   1      }
 169          
 170          void  delay(unsigned long uldata)
 171          {
 172   1        unsigned int j  =  0;
 173   1        unsigned int g  =  0;
 174   1        while(uldata--)
 175   1          Delay200us();
 176   1      }
 177          
 178          void Delay200ms()   //@22.1184MHz
C51 COMPILER V9.54   MAIN                                                                  08/29/2024 10:29:51 PAGE 4   

 179          {
 180   1        unsigned char i, j, k;
 181   1      
 182   1        i = 17;
 183   1        j = 208;
 184   1        k = 27;
 185   1        do
 186   1        {
 187   2          do
 188   2          {
 189   3            while (--k);
 190   3          }
 191   2          while (--j);
 192   2        }
 193   1        while (--i);
 194   1      }
 195          
 196          /***********************************************************
 197          * 名    称： 中断处理函数
 198          * 功    能：
 199          * 入口参数：
 200          * 出口参数：
 201          * 说    明：
 202          * 调用方法：
 203          **********************************************************/
 204          void ExtInt0Handler(void) interrupt 0
 205          {
 206   1        ProcessInt0();
 207   1      }
 208          /***********************************************************
 209          * 名    称：用户执行函数
 210          * 功    能：识别成功后，执行动作可在此进行修改
 211          * 入口参数： 无
 212          * 出口参数：无
 213          * 说    明：
 214          **********************************************************/
 215          void  User_handle(uint8 dat)
 216          {
 217   1        if(0 == dat)
 218   1        {
 219   2          G0_flag = ENABLE;
 220   2          over_time=0;
 221   2          PrintCom("U");
 222   2          LED = 0;
 223   2        }
 224   1        else if(ENABLE == G0_flag)
 225   1        {
 226   2      //    G0_flag = DISABLE;
 227   2      //    LED = 1;
 228   2          switch(dat)
 229   2          {
 230   3          case CODE_1:   /*命令“立正”*/
 231   3            over_time=0;
 232   3            PrintCom("5");
 233   3            break;
 234   3          case CODE_2:   /*命令“起立”“起身”“站起来”*/
 235   3            over_time=0;
 236   3            PrintCom("q");
 237   3            break;
 238   3          case CODE_3:    /*命令“前进”“走”*/
 239   3            over_time=0;
 240   3            PrintCom("f");
C51 COMPILER V9.54   MAIN                                                                  08/29/2024 10:29:51 PAGE 5   

 241   3            break;
 242   3          case CODE_4:    /*命令“后退”*/
 243   3            over_time=0;
 244   3            PrintCom("b");
 245   3            break;
 246   3          case CODE_5:    /*命令“左转”*/
 247   3            over_time=0;
 248   3            PrintCom("l");
 249   3            break;
 250   3          case CODE_6:    /*命令“右转”*/
 251   3            over_time=0;
 252   3            PrintCom("r");
 253   3            break;
 254   3          case CODE_7:    /*命令“趴下”*/
 255   3            over_time=0;
 256   3            PrintCom("p");
 257   3            break;
 258   3          case CODE_8:    /*命令“卧下”*/
 259   3            over_time=0;
 260   3            SRD4 = 0;
 261   3            PrintCom("2");
 262   3            break;
 263   3          case CODE_9:    /*命令“坐下”“擦脸”“坐下擦脸”*/
 264   3            over_time=0;
 265   3            PrintCom("s");
 266   3            break;
 267   3          case CODE_10:   /*命令“伸懒腰”*/
 268   3            over_time=0;
 269   3            PrintCom("y");
 270   3            break;
 271   3          case CODE_11:   /*命令“抬头”*/
 272   3            over_time=0;
 273   3            PrintCom("1");
 274   3            break;
 275   3          case CODE_12:   /*命令“打招呼”“打个招呼”“哈喽”“嗨”*/
 276   3            over_time=0;
 277   3            PrintCom("o");
 278   3            break;
 279   3          case CODE_13:   /*命令“摇摆”*/
 280   3            over_time=0;
 281   3            PrintCom("w");
 282   3            break;
 283   3          case CODE_14:   /*命令“抬手”*/
 284   3            over_time=0;
 285   3            PrintCom("j");
 286   3            break;
 287   3          case CODE_15:   /*命令“跳舞”*/
 288   3            over_time=0;
 289   3            PrintCom("d");
 290   3            break;
 291   3          case CODE_16:   /*命令“睡觉”*/
 292   3            over_time=0;    
 293   3            if (rand()%2) {//随机产生两种睡觉中的一种
 294   4              PrintCom("p"); //趴下睡觉
 295   4            }
 296   3            else{
 297   4              PrintCom("2"); //卧下睡觉
 298   4            }
 299   3            break;
 300   3          case CODE_17:   /*命令“难受”“表演一个不开心”*/
 301   3            over_time=0;
 302   3            PrintCom("N");
C51 COMPILER V9.54   MAIN                                                                  08/29/2024 10:29:51 PAGE 6   

 303   3            break;
 304   3          case CODE_18:   /*命令“”*/
 305   3            over_time=0;
 306   3            PrintCom("");
 307   3            break;
 308   3          case CODE_19:   /*命令“武汉”*/
 309   3            over_time=0;
 310   3            PrintCom("B");
 311   3            break;
 312   3          case CODE_20:   /*命令“门都没有”*/
 313   3            over_time=0;
 314   3            PrintCom("Y");
 315   3            break;
 316   3          case CODE_21:   /*命令“咋回事”*/
 317   3            over_time=0;
 318   3            PrintCom("X");
 319   3            break;
 320   3          case CODE_22:   /*命令“为什么”*/
 321   3            over_time=0;
 322   3            PrintCom("W");
 323   3            break;
 324   3          case CODE_23:   /*命令“你开心吗”“查看开心值”*/
 325   3            over_time=0;
 326   3            PrintCom("K");
 327   3            break;
 328   3          case CODE_24:   /*命令“累不累”“查看体力值”*/
 329   3            over_time=0;
 330   3            PrintCom("T");
 331   3            break;
 332   3          case CODE_25:   /*命令“查看指数”*/
 333   3            over_time=0;
 334   3            PrintCom("Z");
 335   3            break;
 336   3          case CODE_26:   /*命令“”*/
 337   3            over_time=0;
 338   3            PrintCom("");
 339   3            break;
 340   3          case CODE_27:   /*命令“.....”*/
 341   3            over_time=0;
 342   3            PrintCom("");
 343   3            break;
 344   3          case CODE_28:   /*命令“.....”*/
 345   3            over_time=0;
 346   3            PrintCom("");
 347   3            break;
 348   3          case CODE_29:   /*命令“.....”*/
 349   3            over_time=0;
 350   3            PrintCom("");
 351   3            break;
 352   3          case CODE_30:   /*命令“.....”*/
 353   3            over_time=0;
 354   3            PrintCom("");
 355   3            break;
 356   3          case CODE_31:   /*命令“.....”*/
 357   3            over_time=0;
 358   3            PrintCom("");
 359   3            break;
 360   3          case CODE_32:   /*命令“.....”*/
 361   3            over_time=0;
 362   3            PrintCom("");
 363   3            break;
 364   3          case CODE_33:   /*命令“.....”*/
C51 COMPILER V9.54   MAIN                                                                  08/29/2024 10:29:51 PAGE 7   

 365   3            over_time=0;
 366   3            PrintCom("");
 367   3            break;
 368   3          case CODE_34:   /*命令“.....”*/
 369   3            over_time=0;
 370   3            PrintCom("");
 371   3            break;
 372   3          case CODE_35:   /*命令“.....”*/
 373   3            over_time=0;
 374   3            PrintCom("");
 375   3            break;
 376   3          case CODE_36:   /*命令“.....”*/
 377   3            over_time=0;
 378   3            PrintCom("");
 379   3            break;
 380   3          case CODE_37:   /*命令“.....”*/
 381   3            over_time=0;
 382   3            PrintCom("");
 383   3            break;
 384   3          case CODE_38:   /*命令“.....”*/
 385   3            over_time=0;
 386   3            PrintCom("");
 387   3            break;
 388   3          case CODE_39:   /*命令“.....”*/
 389   3            over_time=0;
 390   3            PrintCom("");
 391   3            break;
 392   3          case CODE_40:   /*命令“.....”*/
 393   3            over_time=0;
 394   3            PrintCom("");
 395   3            break;
 396   3          case CODE_41:   /*命令“.....”*/
 397   3            over_time=0;
 398   3            PrintCom("");
 399   3            break;
 400   3          case CODE_42:   /*命令“.....”*/
 401   3            over_time=0;
 402   3            PrintCom("");
 403   3            break;
 404   3          case CODE_43:   /*命令“.....”*/
 405   3            over_time=0;
 406   3            PrintCom("");
 407   3            break;
 408   3          case CODE_44:   /*命令“.....”*/
 409   3            over_time=0;
 410   3            PrintCom("");
 411   3            break;
 412   3          case CODE_45:   /*命令“.....”*/
 413   3            over_time=0;
 414   3            PrintCom("");
 415   3            break;
 416   3          case CODE_46:   /*命令“.....”*/
 417   3            over_time=0;
 418   3            PrintCom("");
 419   3            break;
 420   3          case CODE_47:   /*命令“.....”*/
 421   3            over_time=0;
 422   3            PrintCom("");
 423   3            break;
 424   3          case CODE_48:   /*命令“.....”*/
 425   3            over_time=0;
 426   3            PrintCom("");
C51 COMPILER V9.54   MAIN                                                                  08/29/2024 10:29:51 PAGE 8   

 427   3            break;
 428   3          case CODE_49:   /*命令“.....”*/
 429   3            over_time=0;
 430   3            PrintCom("");
 431   3            break;
 432   3          default:/*text.....*/
 433   3            break;
 434   3          }
 435   2        }
 436   1        else
 437   1        {
 438   2          //PrintCom("请说出一级口令\r\n"); /*text.....*/
 439   2        }
 440   1      }
 441          
 442          
 443          
 444          void tm0_isr() interrupt 1
 445          {
 446   1          TL0 = 0x00;   //设置定时初值
 447   1        TH0 = 0x28;   //设置定时初值
 448   1        WDT_CONTR=0x3D;
 449   1          if(G0_flag == ENABLE)
 450   1        {
 451   2          over_time++;
 452   2        }
 453   1          
 454   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    904    ----
   CONSTANT SIZE    =     83    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      10
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
